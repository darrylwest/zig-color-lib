---

name: Release

'on':
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Run full test suite
        run: |
          echo "ðŸ§ª Running comprehensive test suite for release..."
          zig build test
          zig build example
          zig build docs

      - name: Generate release artifacts
        run: |
          echo "ðŸ“¦ Generating release artifacts..."

          # Create release directory
          mkdir -p release/zig-color-lib-${GITHUB_REF#refs/tags/}

          # Copy source files
          cp -r src/ \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/
          cp build.zig \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/
          cp build.zig.zon \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/
          cp README.md \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/
          cp LICENSE \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/
          cp -r example/ \
            release/zig-color-lib-${GITHUB_REF#refs/tags/}/ || true

          # Copy documentation if it exists
          if [ -d "zig-out/docs" ]; then
            cp -r zig-out/docs/ \
              release/zig-color-lib-${GITHUB_REF#refs/tags/}/docs/
          fi

          # Create archives
          cd release
          tar -czf zig-color-lib-${GITHUB_REF#refs/tags/}.tar.gz \
            zig-color-lib-${GITHUB_REF#refs/tags/}/
          zip -r zig-color-lib-${GITHUB_REF#refs/tags/}.zip \
            zig-color-lib-${GITHUB_REF#refs/tags/}/

      - name: Generate release notes
        run: |
          echo "# Zig Color Library ${GITHUB_REF#refs/tags/}" > RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "A simple, efficient ANSI color library for Zig console" \
            "applications." >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## âœ¨ Features" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "- **Complete ANSI color support** - Regular and bright colors," \
            "backgrounds, and styles" >> RELEASE_NOTES.md
          echo "- **Smart color detection** - Automatic terminal capability" \
            "detection" >> RELEASE_NOTES.md
          echo "- **Environment awareness** - Respects NO_COLOR/FORCE_COLOR" \
            "standards" >> RELEASE_NOTES.md
          echo "- **Multiple usage patterns** - Simple functions, smart" \
            "detection, or direct codes" >> RELEASE_NOTES.md
          echo "- **Zero dependencies** - Pure Zig implementation" \
            >> RELEASE_NOTES.md
          echo "- **Well tested** - Comprehensive test suite" \
            >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸ”§ Requirements" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "- **Zig 0.15.1 or later**" >> RELEASE_NOTES.md
          echo "- **No external dependencies**" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸ“¦ Installation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### Using Zig Package Manager" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "\`\`\`bash" >> RELEASE_NOTES.md
          echo "zig fetch --save" \
            "https://github.com/darrylwest/zig-color-lib/archive/" \
            "${GITHUB_REF#refs/tags/}.tar.gz" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "### Manual Installation" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "Download and extract the source archive, then add to your" \
            "build.zig.zon:" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "\`\`\`zig" >> RELEASE_NOTES.md
          echo ".dependencies = .{" >> RELEASE_NOTES.md
          echo "    .zig_color = .{" >> RELEASE_NOTES.md
          echo "        .url = \"https://github.com/darrylwest/" \
            "zig-color-lib/archive/${GITHUB_REF#refs/tags/}.tar.gz\"," \
            >> RELEASE_NOTES.md
          echo "        .hash = \"...\", // Generated by zig build" \
            >> RELEASE_NOTES.md
          echo "    }," >> RELEASE_NOTES.md
          echo "}," >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "## ðŸš€ Quick Start" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "\`\`\`zig" >> RELEASE_NOTES.md
          echo "const color = @import(\"zig-color\");" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "// Simple colored text" >> RELEASE_NOTES.md
          echo "const red_text = try color.simple.red(\"Error!\", allocator);" \
            >> RELEASE_NOTES.md
          echo "defer allocator.free(red_text);" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "// Smart color support" >> RELEASE_NOTES.md
          echo "const color_support = color.ColorSupport.init();" \
            >> RELEASE_NOTES.md
          echo "const smart_text = try color_support.green(\"Success!\"," \
            "allocator);" >> RELEASE_NOTES.md
          echo "\`\`\`" >> RELEASE_NOTES.md
          echo "" >> RELEASE_NOTES.md
          echo "See [README.md](README.md) for complete documentation" \
            "and examples." >> RELEASE_NOTES.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Zig Color Library ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          files: |
            release/zig-color-lib-${{ github.ref_name }}.tar.gz
            release/zig-color-lib-${{ github.ref_name }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ github.ref_name }}
          path: release/
          retention-days: 90
